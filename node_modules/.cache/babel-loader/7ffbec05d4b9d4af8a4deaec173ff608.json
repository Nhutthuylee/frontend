{"ast":null,"code":"import axios from 'axios';\nexport const userLoginFetch = (username, password) => {\n  return axios.post('http://localhost:3000/logins', username, password).then(response => {\n    if (response.data.accessToken) {\n      localStorage.setItem(\"user\", JSON.stringify(response.data));\n    }\n\n    return response.data;\n  }); // return dispatch => {\n  //     return axios.post('http://localhost:3000/logins', username, password, {\n  //         headers: {\n  //             'Content-type': 'application/json'\n  //         }\n  //     }).then(\n  //         response => {\n  //             if (response.data.accessToken) {\n  //                 localStorage.setItem(\"user\", JSON.stringify(response.data));\n  //             }\n  //             return response.data;\n  //         }\n  //     )\n  // }\n  // return dispatch => {\n  //     return fetch(\"http://localhost:3000/user\", {\n  //       method: \"POST\",\n  //       headers: {\n  //         'Content-Type': 'application/json',\n  //         Accept: 'application/json',\n  //       },\n  //       body: JSON.stringify({user})\n  //     })\n  //       .then(resp => resp.json())\n  //       .then(data => {\n  //         if (data.message) {\n  //         } else {\n  //           localStorage.setItem(\"token\", data.jwt)\n  //           dispatch(loginUser(data.user))\n  //         }\n  //       })\n  //   }\n};\n\nconst loginUser = userObj => ({\n  type: 'LOGIN_USER',\n  payload: userObj\n});","map":{"version":3,"sources":["C:/Users/internship_5/Demo/internship_2020_java_team_demo/src/actions/loginAction.js"],"names":["axios","userLoginFetch","username","password","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","loginUser","userObj","type","payload"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,cAAc,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAElD,SAAOH,KAAK,CAACI,IAAN,CAAW,8BAAX,EAA2CF,QAA3C,EAAoDC,QAApD,EACNE,IADM,CAEHC,QAAQ,IAAG;AACP,QAAGA,QAAQ,CAACC,IAAT,CAAcC,WAAjB,EAA6B;AACzBC,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeN,QAAQ,CAACC,IAAxB,CAA7B;AACH;;AACE,WAAOD,QAAQ,CAACC,IAAhB;AACN,GAPE,CAAP,CAFkD,CAalD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CA/CM;;AAiDP,MAAMM,SAAS,GAAGC,OAAO,KAAI;AACzBC,EAAAA,IAAI,EAAE,YADmB;AAEzBC,EAAAA,OAAO,EAAEF;AAFgB,CAAJ,CAAzB","sourcesContent":["import axios from 'axios';\r\n\r\nexport const userLoginFetch = (username, password) => {\r\n\r\n    return axios.post('http://localhost:3000/logins', username,password)\r\n    .then(\r\n        response =>{\r\n            if(response.data.accessToken){\r\n                localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n            }\r\n               return response.data; \r\n        }\r\n\r\n    )\r\n\r\n    // return dispatch => {\r\n    //     return axios.post('http://localhost:3000/logins', username, password, {\r\n    //         headers: {\r\n    //             'Content-type': 'application/json'\r\n    //         }\r\n    //     }).then(\r\n    //         response => {\r\n    //             if (response.data.accessToken) {\r\n    //                 localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n    //             }\r\n    //             return response.data;\r\n    //         }\r\n    //     )\r\n    // }\r\n\r\n\r\n    // return dispatch => {\r\n    //     return fetch(\"http://localhost:3000/user\", {\r\n    //       method: \"POST\",\r\n    //       headers: {\r\n    //         'Content-Type': 'application/json',\r\n    //         Accept: 'application/json',\r\n    //       },\r\n    //       body: JSON.stringify({user})\r\n    //     })\r\n    //       .then(resp => resp.json())\r\n    //       .then(data => {\r\n    //         if (data.message) {\r\n    //         } else {\r\n    //           localStorage.setItem(\"token\", data.jwt)\r\n    //           dispatch(loginUser(data.user))\r\n    //         }\r\n    //       })\r\n    //   }\r\n}\r\n\r\nconst loginUser = userObj =>({\r\n    type: 'LOGIN_USER',\r\n    payload: userObj\r\n})"]},"metadata":{},"sourceType":"module"}