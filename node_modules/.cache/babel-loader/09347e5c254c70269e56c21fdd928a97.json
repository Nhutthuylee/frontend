{"ast":null,"code":"import axios from 'axios';\nconst SET_LOGIN_PENDING = 'SET_LOGIN_PENDING';\nconst SET_LOGIN_SUCCESS = 'SET_LOGIN_SUCCESS';\nconst SET_LOGIN_ERROR = 'SET_LOGIN_ERROR';\nexport function login(username, password) {\n  return dispatch => {\n    dispatch(setLoginPending(true));\n    dispatch(setLoginSuccess(false));\n    dispatch(setLoginError(null));\n    calLoginApi(username, password, error => {});\n  };\n}\n\nfunction setLoginPending(isLoginPending) {\n  return {\n    type: SET_LOGIN_PENDING,\n    isLoginPending\n  };\n}\n\nfunction setLoginSuccess(isLoginSuccess) {\n  return {\n    type: SET_LOGIN_SUCCESS,\n    isLoginSuccess\n  };\n}\n\nfunction setLoginError(loginError) {\n  return {\n    type: SET_LOGIN_ERROR,\n    loginError\n  };\n}\n\nfunction calLoginApi(username, password, callback) {\n  axios.post(\"http://localhost:8080/users/authenticate\" + username, password).then(response => {\n    const token_ = response.data;\n    localStorage.setItem(\"token\", token_);\n    console.log(token_);\n    axios.get('http://localhost:8080/users' + username + '/' + password, {\n      headers: {\n        \"Authorization\": 'Bearer ' + localStorage.getItem(\"token\"),\n        'Content-Type': 'application/json'\n      }\n    });\n  });\n}\n\nexport default function reducer(state = {\n  isLoginSuccess: false,\n  isLoginPending: false,\n  loginError: null\n}, action) {\n  switch (action.type) {\n    case SET_LOGIN_PENDING:\n      return Object.assign({}, state, {\n        isLoginPending: action.isLoginPending\n      });\n\n    case SET_LOGIN_SUCCESS:\n      return Object.assign({}, state, {\n        isLoginSuccess: action.isLoginSuccess\n      });\n\n    case SET_LOGIN_ERROR:\n      return Object.assign({}, state, {\n        loginError: action.loginError\n      });\n\n    default:\n      return state;\n  }\n} // .then(d => {\n//     setTimeout(() => {\n//         if (password === d.data.password) {\n//             console.log(d.data)\n//             localStorage.setItem('logined_user', JSON.stringify(d.data))\n//             return callback(null);\n//         } else {\n//             return callback(new Error('Invalid email and password'));\n//         }\n//     }, 1000);\n// })","map":{"version":3,"sources":["E:/internship_2020_java_team_demo-feature-final-demo-Thuy/src/reducers/loginReducer.js"],"names":["axios","SET_LOGIN_PENDING","SET_LOGIN_SUCCESS","SET_LOGIN_ERROR","login","username","password","dispatch","setLoginPending","setLoginSuccess","setLoginError","calLoginApi","error","isLoginPending","type","isLoginSuccess","loginError","callback","post","then","response","token_","data","localStorage","setItem","console","log","get","headers","getItem","reducer","state","action","Object","assign"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,iBAAiB,GAAG,mBAA1B;AACA,MAAMC,iBAAiB,GAAG,mBAA1B;AACA,MAAMC,eAAe,GAAG,iBAAxB;AAEA,OAAO,SAASC,KAAT,CAAeC,QAAf,EAAyBC,QAAzB,EAAmC;AACtC,SAAOC,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACC,eAAe,CAAC,IAAD,CAAhB,CAAR;AACAD,IAAAA,QAAQ,CAACE,eAAe,CAAC,KAAD,CAAhB,CAAR;AACAF,IAAAA,QAAQ,CAACG,aAAa,CAAC,IAAD,CAAd,CAAR;AAEAC,IAAAA,WAAW,CAACN,QAAD,EAAWC,QAAX,EAAqBM,KAAK,IAAI,CAExC,CAFU,CAAX;AAGH,GARD;AASH;;AAED,SAASJ,eAAT,CAAyBK,cAAzB,EAAyC;AACrC,SAAO;AACHC,IAAAA,IAAI,EAAEb,iBADH;AAEHY,IAAAA;AAFG,GAAP;AAIH;;AAED,SAASJ,eAAT,CAAyBM,cAAzB,EAAyC;AACrC,SAAO;AACHD,IAAAA,IAAI,EAAEZ,iBADH;AAEHa,IAAAA;AAFG,GAAP;AAIH;;AAED,SAASL,aAAT,CAAuBM,UAAvB,EAAmC;AAC/B,SAAO;AACHF,IAAAA,IAAI,EAAEX,eADH;AAEHa,IAAAA;AAFG,GAAP;AAIH;;AAED,SAASL,WAAT,CAAqBN,QAArB,EAA+BC,QAA/B,EAAyCW,QAAzC,EAAmD;AAC/CjB,EAAAA,KAAK,CAACkB,IAAN,CAAW,6CAA6Cb,QAAxD,EAAkEC,QAAlE,EACKa,IADL,CAEQC,QAAQ,IAAI;AACR,UAAMC,MAAM,GAAGD,QAAQ,CAACE,IAAxB;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,MAA9B;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACArB,IAAAA,KAAK,CAAC2B,GAAN,CAAU,gCAAgCtB,QAAhC,GAA2C,GAA3C,GAAiDC,QAA3D,EAAqE;AACjEsB,MAAAA,OAAO,EAAE;AACL,yBAAiB,YAAYL,YAAY,CAACM,OAAb,CAAqB,OAArB,CADxB;AAEL,wBAAgB;AAFX;AADwD,KAArE;AAMH,GAZT;AAcH;;AAED,eAAe,SAASC,OAAT,CAAiBC,KAAK,GAAG;AACpChB,EAAAA,cAAc,EAAE,KADoB;AAEpCF,EAAAA,cAAc,EAAE,KAFoB;AAGpCG,EAAAA,UAAU,EAAE;AAHwB,CAAzB,EAIZgB,MAJY,EAIJ;AACP,UAAQA,MAAM,CAAClB,IAAf;AACI,SAAKb,iBAAL;AACI,aAAOgC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,KAAlB,EAAyB;AAC5BlB,QAAAA,cAAc,EAAEmB,MAAM,CAACnB;AADK,OAAzB,CAAP;;AAGJ,SAAKX,iBAAL;AACI,aAAO+B,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,KAAlB,EAAyB;AAC5BhB,QAAAA,cAAc,EAAEiB,MAAM,CAACjB;AADK,OAAzB,CAAP;;AAGJ,SAAKZ,eAAL;AACI,aAAO8B,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,KAAlB,EAAyB;AAC5Bf,QAAAA,UAAU,EAAEgB,MAAM,CAAChB;AADS,OAAzB,CAAP;;AAGJ;AACI,aAAOe,KAAP;AAdR;AAgBH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from 'axios';\n\nconst SET_LOGIN_PENDING = 'SET_LOGIN_PENDING';\nconst SET_LOGIN_SUCCESS = 'SET_LOGIN_SUCCESS';\nconst SET_LOGIN_ERROR = 'SET_LOGIN_ERROR';\n\nexport function login(username, password) {\n    return dispatch => {\n        dispatch(setLoginPending(true));\n        dispatch(setLoginSuccess(false));\n        dispatch(setLoginError(null));\n\n        calLoginApi(username, password, error => {\n\n        })\n    }\n}\n\nfunction setLoginPending(isLoginPending) {\n    return {\n        type: SET_LOGIN_PENDING,\n        isLoginPending\n    };\n}\n\nfunction setLoginSuccess(isLoginSuccess) {\n    return {\n        type: SET_LOGIN_SUCCESS,\n        isLoginSuccess\n    };\n}\n\nfunction setLoginError(loginError) {\n    return {\n        type: SET_LOGIN_ERROR,\n        loginError\n    }\n}\n\nfunction calLoginApi(username, password, callback) {\n    axios.post(\"http://localhost:8080/users/authenticate\" + username, password)\n        .then(\n            response => {\n                const token_ = response.data\n                localStorage.setItem(\"token\", token_);\n                console.log(token_)\n                axios.get('http://localhost:8080/users' + username + '/' + password, {\n                    headers: {\n                        \"Authorization\": 'Bearer ' + localStorage.getItem(\"token\"),\n                        'Content-Type': 'application/json',\n                    }\n                })\n            }\n        )\n}\n\nexport default function reducer(state = {\n    isLoginSuccess: false,\n    isLoginPending: false,\n    loginError: null\n}, action) {\n    switch (action.type) {\n        case SET_LOGIN_PENDING:\n            return Object.assign({}, state, {\n                isLoginPending: action.isLoginPending\n            });\n        case SET_LOGIN_SUCCESS:\n            return Object.assign({}, state, {\n                isLoginSuccess: action.isLoginSuccess\n            });\n        case SET_LOGIN_ERROR:\n            return Object.assign({}, state, {\n                loginError: action.loginError\n            });\n        default:\n            return state;\n    }\n}\n\n// .then(d => {\n//     setTimeout(() => {\n//         if (password === d.data.password) {\n//             console.log(d.data)\n//             localStorage.setItem('logined_user', JSON.stringify(d.data))\n//             return callback(null);\n//         } else {\n//             return callback(new Error('Invalid email and password'));\n//         }\n//     }, 1000);\n// })"]},"metadata":{},"sourceType":"module"}