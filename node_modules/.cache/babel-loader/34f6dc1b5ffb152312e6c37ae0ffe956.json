{"ast":null,"code":"import axios from 'axios';\nconst SET_LOGIN_PENDING = 'SET_LOGIN_PENDING';\nconst SET_LOGIN_SUCCESS = 'SET_LOGIN_SUCCESS';\nconst SET_LOGIN_ERROR = 'SET_LOGIN_ERROR';\nexport function login(username, password) {\n  return dispatch => {\n    dispatch(setLoginPending(true));\n    dispatch(setLoginSuccess(false));\n    dispatch(setLoginError(null));\n    calLoginApi(username, password, error => {\n      dispatch(setLoginPending(false));\n\n      if (!error) {\n        dispatch(setLoginSuccess(true));\n      } else {\n        dispatch(setLoginError(error));\n      }\n    });\n  };\n}\n\nfunction setLoginPending(isLoginPending) {\n  return {\n    type: SET_LOGIN_PENDING,\n    isLoginPending\n  };\n}\n\nfunction setLoginSuccess(isLoginSuccess) {\n  return {\n    type: SET_LOGIN_SUCCESS,\n    isLoginSuccess\n  };\n}\n\nfunction setLoginError(loginError) {\n  return {\n    type: SET_LOGIN_ERROR,\n    loginError\n  };\n}\n\nfunction calLoginApi(username, password, callback) {\n  axios.post(\"http://localhost:8080/authenticate\").then(response => {\n    console.log(response.data);\n    const token_ = response.data;\n    localStorage.setItem(\"token\", token_);\n    console.log(token_);\n    axios.get('http://localhost:8080/login' + username + \"/\" + password, {\n      headers: {\n        \"Authorization\": 'Bearer ' + localStorage.getItem(\"token\"),\n        'Content-Type': 'application/json'\n      }\n    }).then(dt => {\n      setTimeout(() => {\n        if (password === dt.data.password) {\n          localStorage.setItem(\"logined_user\", JSON.stringify(dt.data));\n          return callback(null);\n        } else {\n          return callback(new Error('Invalid email and password'));\n        }\n      }, 1000);\n    });\n  });\n}\n\nexport default function reducer(state = {\n  isLoginSuccess: false,\n  isLoginPending: false,\n  loginError: null\n}, action) {\n  switch (action.type) {\n    case SET_LOGIN_PENDING:\n      return Object.assign({}, state, {\n        isLoginPending: action.isLoginPending\n      });\n\n    case SET_LOGIN_SUCCESS:\n      return Object.assign({}, state, {\n        isLoginSuccess: action.isLoginSuccess\n      });\n\n    case SET_LOGIN_ERROR:\n      return Object.assign({}, state, {\n        loginError: action.loginError\n      });\n\n    default:\n      return state;\n  }\n} // .then(d => {\n//     setTimeout(() => {\n//         if (password === d.data.password) {\n//             console.log(d.data)\n//             localStorage.setItem('logined_user', JSON.stringify(d.data))\n//             return callback(null);\n//         } else {\n//             return callback(new Error('Invalid email and password'));\n//         }\n//     }, 1000);\n// })","map":{"version":3,"sources":["E:/frontend/src/reducers/login.reducer.js"],"names":["axios","SET_LOGIN_PENDING","SET_LOGIN_SUCCESS","SET_LOGIN_ERROR","login","username","password","dispatch","setLoginPending","setLoginSuccess","setLoginError","calLoginApi","error","isLoginPending","type","isLoginSuccess","loginError","callback","post","then","response","console","log","data","token_","localStorage","setItem","get","headers","getItem","dt","setTimeout","JSON","stringify","Error","reducer","state","action","Object","assign"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\n\r\nconst SET_LOGIN_PENDING = 'SET_LOGIN_PENDING';\r\nconst SET_LOGIN_SUCCESS = 'SET_LOGIN_SUCCESS';\r\nconst SET_LOGIN_ERROR = 'SET_LOGIN_ERROR';\r\n\r\nexport function login(username, password) {\r\n    return dispatch => {\r\n        dispatch(setLoginPending(true));\r\n        dispatch(setLoginSuccess(false));\r\n        dispatch(setLoginError(null));\r\n\r\n        calLoginApi(username, password, error => {\r\n            dispatch(setLoginPending(false));\r\n            if (!error) {\r\n                dispatch(setLoginSuccess(true));\r\n            } else {\r\n                dispatch(setLoginError(error))\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction setLoginPending(isLoginPending) {\r\n    return {\r\n        type: SET_LOGIN_PENDING,\r\n        isLoginPending\r\n    };\r\n}\r\n\r\nfunction setLoginSuccess(isLoginSuccess) {\r\n    return {\r\n        type: SET_LOGIN_SUCCESS,\r\n        isLoginSuccess\r\n    };\r\n}\r\n\r\nfunction setLoginError(loginError) {\r\n    return {\r\n        type: SET_LOGIN_ERROR,\r\n        loginError\r\n    }\r\n}\r\n\r\nfunction calLoginApi(username, password, callback) {\r\n    axios.post(\"http://localhost:8080/authenticate\")\r\n        .then(\r\n            response => {\r\n                console.log(response.data)\r\n                const token_ = response.data\r\n                localStorage.setItem(\"token\", token_);\r\n                console.log(token_)\r\n                axios.get('http://localhost:8080/login' + username + \"/\" + password, {\r\n                    headers: {\r\n                        \"Authorization\": 'Bearer ' + localStorage.getItem(\"token\"),\r\n                        'Content-Type': 'application/json',\r\n                    }\r\n                }).then(dt => {\r\n                    setTimeout(() => {\r\n                        if (password === dt.data.password) {\r\n                            localStorage.setItem(\"logined_user\", JSON.stringify(dt.data))\r\n                            return callback(null);\r\n                        } else {\r\n                            return callback(new Error('Invalid email and password'));\r\n                        }\r\n                    }, 1000);\r\n                })\r\n            }\r\n        )\r\n}\r\n\r\nexport default function reducer(state = {\r\n    isLoginSuccess: false,\r\n    isLoginPending: false,\r\n    loginError: null\r\n}, action) {\r\n    switch (action.type) {\r\n        case SET_LOGIN_PENDING:\r\n            return Object.assign({}, state, {\r\n                isLoginPending: action.isLoginPending\r\n            });\r\n        case SET_LOGIN_SUCCESS:\r\n            return Object.assign({}, state, {\r\n                isLoginSuccess: action.isLoginSuccess\r\n            });\r\n        case SET_LOGIN_ERROR:\r\n            return Object.assign({}, state, {\r\n                loginError: action.loginError\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// .then(d => {\r\n//     setTimeout(() => {\r\n//         if (password === d.data.password) {\r\n//             console.log(d.data)\r\n//             localStorage.setItem('logined_user', JSON.stringify(d.data))\r\n//             return callback(null);\r\n//         } else {\r\n//             return callback(new Error('Invalid email and password'));\r\n//         }\r\n//     }, 1000);\r\n// })"]},"metadata":{},"sourceType":"module"}