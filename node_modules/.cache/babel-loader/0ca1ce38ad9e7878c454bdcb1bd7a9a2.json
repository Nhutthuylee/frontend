{"ast":null,"code":"import axios from 'axios';\nexport const userLoginFetch = (username, password) => {\n  // return axios.post('http://localhost:3000/logins', username,password)\n  // .then(\n  //     response =>{\n  //         if(response.data.accessToken){\n  //             localStorage.setItem(\"user\", JSON.stringify(response.data));\n  //         }\n  //            return response.data; \n  //     }\n  // )\n  // return dispatch => {\n  //     return axios.post('http://localhost:3000/logins', username, password, {\n  //         headers: {\n  //             'Content-type': 'application/json'\n  //         }\n  //     }).then(\n  //         response => {\n  //             if (response.data.accessToken) {\n  //                 localStorage.setItem(\"user\", JSON.stringify(response.data));\n  //             }\n  //             return response.data;\n  //         }\n  //     )\n  // }\n  return dispatch => {\n    return fetch(\"http://localhost:3000/logins\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify({\n        logins\n      })\n    }).then(resp => resp.json()).then(data => {\n      if (data.message) {} else {\n        localStorage.setItem(\"token\", data.jwt);\n        dispatch(loginUser(data.logins));\n      }\n    });\n  };\n};\n\nconst loginUser = userObj => ({\n  type: 'LOGIN_USER',\n  payload: userObj\n});","map":{"version":3,"sources":["C:/Users/internship_5/Demo/internship_2020_java_team_demo/src/actions/loginAction.js"],"names":["axios","userLoginFetch","username","password","dispatch","fetch","method","headers","Accept","body","JSON","stringify","logins","then","resp","json","data","message","localStorage","setItem","jwt","loginUser","userObj","type","payload"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,cAAc,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,SAAOC,QAAQ,IAAI;AACf,WAAOC,KAAK,CAAC,8BAAD,EAAiC;AAC3CC,MAAAA,MAAM,EAAE,MADmC;AAE3CC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,MAAM,EAAE;AAFD,OAFkC;AAM3CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACC,QAAAA;AAAD,OAAf;AANqC,KAAjC,CAAL,CAQJC,IARI,CAQCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EART,EASJF,IATI,CASCG,IAAI,IAAI;AACZ,UAAIA,IAAI,CAACC,OAAT,EAAkB,CACjB,CADD,MACO;AACLC,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,IAAI,CAACI,GAAnC;AACAhB,QAAAA,QAAQ,CAACiB,SAAS,CAACL,IAAI,CAACJ,MAAN,CAAV,CAAR;AACD;AACF,KAfI,CAAP;AAgBD,GAjBH;AAkBH,CA/CM;;AAiDP,MAAMS,SAAS,GAAGC,OAAO,KAAI;AACzBC,EAAAA,IAAI,EAAE,YADmB;AAEzBC,EAAAA,OAAO,EAAEF;AAFgB,CAAJ,CAAzB","sourcesContent":["import axios from 'axios';\r\n\r\nexport const userLoginFetch = (username, password) => {\r\n\r\n    // return axios.post('http://localhost:3000/logins', username,password)\r\n    // .then(\r\n    //     response =>{\r\n    //         if(response.data.accessToken){\r\n    //             localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n    //         }\r\n    //            return response.data; \r\n    //     }\r\n\r\n    // )\r\n\r\n    // return dispatch => {\r\n    //     return axios.post('http://localhost:3000/logins', username, password, {\r\n    //         headers: {\r\n    //             'Content-type': 'application/json'\r\n    //         }\r\n    //     }).then(\r\n    //         response => {\r\n    //             if (response.data.accessToken) {\r\n    //                 localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n    //             }\r\n    //             return response.data;\r\n    //         }\r\n    //     )\r\n    // }\r\n\r\n\r\n    return dispatch => {\r\n        return fetch(\"http://localhost:3000/logins\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Accept: 'application/json',\r\n          },\r\n          body: JSON.stringify({logins})\r\n        })\r\n          .then(resp => resp.json())\r\n          .then(data => {\r\n            if (data.message) {\r\n            } else {\r\n              localStorage.setItem(\"token\", data.jwt)\r\n              dispatch(loginUser(data.logins))\r\n            }\r\n          })\r\n      }\r\n}\r\n\r\nconst loginUser = userObj =>({\r\n    type: 'LOGIN_USER',\r\n    payload: userObj\r\n})"]},"metadata":{},"sourceType":"module"}